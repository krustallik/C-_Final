// <auto-generated />
using System;
using ListenerDatabase;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListenerDatabase.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241126164843_screenshots")]
    partial class screenshots
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ListenerDatabase.Models.KeyLog", b =>
                {
                    b.Property<int>("KeyLogId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KeyLogId"));

                    b.Property<string>("KeyPressed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("KeyLogId");

                    b.HasIndex("UserId");

                    b.ToTable("KeyLogs");
                });

            modelBuilder.Entity("ListenerDatabase.Models.Screenshot", b =>
                {
                    b.Property<int>("ScreenshotId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ScreenshotId"));

                    b.Property<byte[]>("ImageData")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ScreenshotId");

                    b.HasIndex("UserId");

                    b.ToTable("Screenshots");
                });

            modelBuilder.Entity("ListenerDatabase.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("ComputerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ListenerDatabase.Models.KeyLog", b =>
                {
                    b.HasOne("ListenerDatabase.Models.User", "User")
                        .WithMany("KeyLogs")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ListenerDatabase.Models.Screenshot", b =>
                {
                    b.HasOne("ListenerDatabase.Models.User", "User")
                        .WithMany("Screenshots")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("ListenerDatabase.Models.User", b =>
                {
                    b.Navigation("KeyLogs");

                    b.Navigation("Screenshots");
                });
#pragma warning restore 612, 618
        }
    }
}
